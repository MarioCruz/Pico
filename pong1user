import machine
import ssd1306
import time

# Set up the OLED display
i2c = machine.I2C(0)
display = ssd1306.SSD1306_I2C(128, 64, i2c)

# Set up the buttons
button_left = machine.Pin(14, machine.Pin.IN, machine.Pin.PULL_UP)
button_right = machine.Pin(15, machine.Pin.IN, machine.Pin.PULL_UP)

# Set up the ball and paddles
ball_x = 64
ball_y = 32
ball_dx = 1
ball_dy = 1
paddle_left_y = 28
paddle_right_y = 28

# Set up the score
score_left = 0
score_right = 0

# Set up the game loop
while True:
    # Clear the display
    display.fill(0)
    
    # Move the ball
    ball_x += ball_dx
    ball_y += ball_dy
    
    # Bounce the ball off the top and bottom of the screen
    if ball_y <= 0 or ball_y >= 63:
        ball_dy *= -1
    
    # Check for paddle collisions
    if ball_x <= 2 and paddle_left_y <= ball_y <= paddle_left_y + 16:
        ball_dx *= -1
    elif ball_x >= 125 and paddle_right_y <= ball_y <= paddle_right_y + 16:
        ball_dx *= -1
    elif ball_x <= 0:
        score_right += 1
        ball_x = 64
        ball_y = 32
    elif ball_x >= 128:
        score_left += 1
        ball_x = 64
        ball_y = 32
    
    # Draw the ball and paddles
    display.fill_rect(ball_x, ball_y, 2, 2, 1)
    display.fill_rect(0, paddle_left_y, 2, 16, 1)
    display.fill_rect(126, paddle_right_y, 2, 16, 1)
    
    # Draw the score
    display.text("P1: {}".format(score_left), 0, 0)
    display.text("P2: {}".format(score_right), 70, 0)
    
    # Move the paddles
    if not button_left.value():
        paddle_left_y -= 1
    if not button_right.value():
        paddle_left_y += 1
    
    # Update the display
    display.show()
    
    # Slow down the loop
    time.sleep(0.01)
