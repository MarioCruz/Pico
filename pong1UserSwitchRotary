import machine
import ssd1306
import time

# Set up the OLED display
i2c = machine.I2C(0, scl=machine.Pin(9), sda=machine.Pin(8), freq=100000)
display = ssd1306.SSD1306_I2C(128, 64, i2c)

# Set up the buttons
button_up = machine.Pin(14, machine.Pin.IN, machine.Pin.PULL_UP)
button_down = machine.Pin(15, machine.Pin.IN, machine.Pin.PULL_UP)

# Set up the rotary switch
switch_pin = machine.Pin(7, machine.Pin.IN)
adc = machine.ADC(0)
adc_c = adc.channel(pin=switch_pin, attn=machine.ADC.ATTN_11DB)
switch_position = adc_c.value()

# Set up the ball and paddle
ball_x = 64
ball_y = 32
ball_dx = 1
ball_dy = 1
paddle_y = 28

# Set up the score
score = 0

# Set up the game loop
while True:
    # Clear the display
    display.fill(0)
    
    # Move the ball
    ball_x += ball_dx
    ball_y += ball_dy
    
    # Bounce the ball off the top and bottom of the screen
    if ball_y <= 0 or ball_y >= 63:
        ball_dy *= -1
    
    # Check for paddle collisions
    if ball_x <= 2 and paddle_y <= ball_y <= paddle_y + 16:
        ball_dx *= -1
        score += 1
    elif ball_x >= 125:
        ball_x = 64
        ball_y = 32
    
    # Draw the ball and paddle
    display.fill_rect(ball_x, ball_y, 2, 2, 1)
    display.fill_rect(0, paddle_y, 2, 16, 1)
    
    # Draw the score
    display.text("Score: {}".format(score), 0, 0)
    
    # Move the paddle using the rotary switch
    switch_position = adc_c.value()
    if switch_position > 800:
        paddle_y -= 1
    elif switch_position < 200:
        paddle_y += 1
    
    # Move the paddle using the buttons
    if not button_up.value():
        paddle_y -= 1
    if not button_down.value():
        paddle_y += 1
    
    # Update the display
    display.show()
    
    # Slow down the loop
    time.sleep(0.01)
